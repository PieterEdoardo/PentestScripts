# A tool for manually going through each step of the TCP protocol
import socket

from scapy.layers.inet import IP, TCP
from scapy.sendrecv import send

from synflood import randomInt

parser = argparse.ArgumentParser(
    description="Slow loris DoS script for research purposes only."
)
parser.add_argument(
    "Host",
    nargs="?",
    help="Target ip address."
)
parser.add_argument(
    "-p",
    "--port",
    default=80,
    help="Port of target host. Yours is probably 80.",
    type=int
)
parser.add_argument(
    "-s",
    "--sockets",
    default=100,
    help="Max socket count. The higher the better!",
    type=int
)
args = parser.parse_args()

#IP

#Port

#First flag

#server Response
running = True
while running:
    target_ip = input("Target host: ")
    target_port = input("Target host: ")
    source_ip: str = socket.gethostbyname(socket.gethostname())
    source_port = 80 # may cause issues if another service is already listening on port 80
    source_sequence = randomInt()
    window = randomInt()

    print(f"setting up for {target_ip}:{target_port}")

    IP_Packet = IP()
    IP_Packet.dst = target_ip
    IP_Packet.src = source_ip

    TCP_Packet = TCP()
    TCP_Packet.sport = source_port
    TCP_Packet.dport = target_port
    TCP_Packet.flags = "S"
    TCP_Packet.seq = source_sequence
    TCP_Packet.window = window

    input("Press any key to start...")

    print("Sending SYN packet...")
    send(IP_Packet / TCP_Packet, verbose=0)
